{"version":3,"sources":["webpack:///./node_modules/cropperjs/dist/cropper.js","webpack:///src/components/page/Upload.vue","webpack:///./src/components/page/Upload.vue?931f","webpack:///./src/components/page/Upload.vue","webpack:///./node_modules/vue-cropperjs/dist/VueCropper.js"],"names":["factory","_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_defineProperty","value","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","IS_BROWSER","window","document","WINDOW","IS_TOUCH_DEVICE","documentElement","HAS_POINTER_EVENT","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","viewMode","dragMode","initialAspectRatio","NaN","aspectRatio","data","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","isNaN","Number","isNumber","isPositiveNumber","Infinity","isUndefined","isObject","hasOwnProperty","isPlainObject","_constructor","error","isFunction","slice","toArray","callback","assign","_len","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","undefined","test","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","addClass","elem","classList","add","className","trim","indexOf","removeClass","remove","replace","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","getData","name","dataset","getAttribute","setData","setAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","get","set","addEventListener","removeEventListener","removeListener","type","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","transform","join","WebkitTransform","msTransform","getPointer","_ref2","endOnly","pageX","pageY","end","endX","endY","startX","startY","getAdjustedSizes","_ref4","height","width","isValidWidth","isValidHeight","adjustedWidth","fromCharCode","String","REGEXP_DATA_URL_HEAD","resetAndGetOrientation","arrayBuffer","orientation","dataView","DataView","littleEndian","app1Start","ifdStart","getUint8","byteLength","offset","tiffOffset","start","str","getStringFromCharCode","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","render","this","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","cropper","containerData","max","offsetWidth","offsetHeight","imageData","rotated","abs","naturalWidth","naturalHeight","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","minWidth","minHeight","maxWidth","maxHeight","newCanvasLeft","newCanvasTop","minLeft","min","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getRotatedSizes","canvas","renderImage","limitCropBox","image","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","alt","createElement","src","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","removeAttribute","removeData","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","ratio","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","getCanvasData","getCropBoxData","setCanvasData","n","setCropBoxData","setDragMode","dragBox","contains","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","buttons","button","pointerType","ctrlKey","action","pointers","changedTouches","touch","identifier","pointerId","originalEvent","cropping","change","right","bottom","renderable","shiftKey","pointer","range","x","y","check","side","move","pointers2","ratios","pointer2","x1","y1","x2","y2","z1","sqrt","sort","a","b","getMaxZoomRatio","p","methods","reset","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","count","_ref3","getPointersCenter","rotateTo","_scaleX","scale","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","imageNaturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","_ref8$maxHeight","_ref8$minWidth","_ref8$minHeight","context","getContext","maxSizes","minSizes","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","drawImage","map","param","floor","getSourceCanvas","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceWidth","sourceHeight","srcX","srcY","setAspectRatio","mode","croppable","AnotherCropper","Cropper","instance","Constructor","_classCallCheck","tagName","Error","reloading","sizing","init","protoProps","staticProps","toDataURL","ArrayBuffer","read","base64","binary","atob","uint8","Uint8Array","charCodeAt","clone","xhr","XMLHttpRequest","onabort","onerror","ontimeout","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","mimeType","chunks","subarray","btoa","arrayBufferToDataURL","_parseOrientation","parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","isIOSWebKit","navigator","userAgent","done","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild","module","exports","Upload","defaultSrc","__webpack_require__","fileList","imgSrc","cropImg","dialogVisible","components","VueCropper","setImage","e","file","files","includes","reader","FileReader","result","$refs","readAsDataURL","cropImage","cancelCrop","imageuploaded","res","console","log","handleError","$notify","title","message","created","page_Upload","_vm","_h","$createElement","_c","_self","staticClass","attrs","separator","_v","_m","drag","multiple","slot","accept","on","visible","update:visible","$event","ref","staticStyle","click","staticRenderFns","href","Component","normalizeComponent","ssrContext","__webpack_exports__","_cropperjs","_cropperjs2","__esModule","default","previewPropType","Element","NodeList","h","containerStyle","imgStyle","Boolean","Function","mounted","_$options$props","$options","_objectWithoutProperties","initCrop","onlyColorChanged","relativeZoom"],"mappings":"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","file":"static/js/8.22ebfcb8e2d26689dcfc.js","sourcesContent":["/*!\n * Cropper.js v1.5.6\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2019-10-04T04:33:48.372Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Cropper = factory());\n}(this, function () { 'use strict';\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(source, true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(source).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper'; // Actions\n\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw'; // Classes\n\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none'; // Events\n\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom'; // Mime types\n\n  var MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL = /^data:/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i; // Misc\n  // Inspired by the default width and height of a canvas element.\n\n  var MIN_CONTAINER_WIDTH = 200;\n  var MIN_CONTAINER_HEIGHT = 100;\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: 200,\n    minContainerHeight: 100,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length)\n      /* array-like */\n      ) {\n          toArray(data).forEach(function (value, key) {\n            callback.call(data, value, key, data);\n          });\n        } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n\n    return data;\n  }\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link http://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n\n      style[property] = value;\n    });\n  }\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n\n    var className = element.className.trim();\n\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n\n  var onceSupported = function () {\n    var supported = false;\n\n    if (IS_BROWSER) {\n      var once = false;\n\n      var listener = function listener() {};\n\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n\n    return supported;\n  }();\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n\n      element.removeEventListener(event, handler, options);\n    });\n  }\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n            listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          listener.apply(element, args);\n        };\n\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n\n      element.addEventListener(event, _handler, options);\n    });\n  }\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n\n  function dispatchEvent(element, type, data) {\n    var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    return element.dispatchEvent(event);\n  }\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n        scaleX = _ref.scaleX,\n        scaleY = _ref.scaleY,\n        translateX = _ref.translateX,\n        translateY = _ref.translateY;\n    var values = [];\n\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    } // Rotate should come first before scale to match orientation transform\n\n\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = _objectSpread2({}, pointers);\n\n    var ratios = [];\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n        ratios.push(ratio);\n      });\n    });\n    ratios.sort(function (a, b) {\n      return Math.abs(a) < Math.abs(b);\n    });\n    return ratios[0];\n  }\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n        pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : _objectSpread2({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n          startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref4) // or 'cover'\n  {\n    var aspectRatio = _ref4.aspectRatio,\n        height = _ref4.height,\n        width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n        imageNaturalWidth = _ref6.naturalWidth,\n        imageNaturalHeight = _ref6.naturalHeight,\n        _ref6$rotate = _ref6.rotate,\n        rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n        _ref6$scaleX = _ref6.scaleX,\n        scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n        _ref6$scaleY = _ref6.scaleY,\n        scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n        naturalWidth = _ref7.naturalWidth,\n        naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n        fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n        _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n        imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n        _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n        imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n        _ref8$maxWidth = _ref8.maxWidth,\n        maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n        _ref8$maxHeight = _ref8.maxHeight,\n        maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n        _ref8$minWidth = _ref8.minWidth,\n        minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n        _ref8$minHeight = _ref8.minHeight,\n        minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = []; // Chunk Typed Array for better performance (#435)\n\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n              if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n                var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n                if (firstIFDOffset >= 0x00000008) {\n                  ifdStart = tiffOffset + firstIFDOffset;\n                }\n              }\n            }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n              // 8 is the offset of the current tag's value\n              _offset += 8; // Get the original orientation value\n\n              orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n              dataView.setUint16(_offset, 1, littleEndian);\n              break;\n            }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n\n      default:\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n          options = this.options,\n          container = this.container,\n          cropper = this.cropper;\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n        height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n          imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      canvasData.left = (containerData.width - canvasWidth) / 2;\n      canvasData.top = (containerData.height - canvasHeight) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      this.initialImageData = assign({}, imageData);\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n          width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n          height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n          degree: imageData.rotate || 0\n        }),\n            naturalWidth = _getRotatedSizes.width,\n            naturalHeight = _getRotatedSizes.height;\n\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true); // Initialize auto crop area\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData,\n          limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        } // The minWidth/Height must be less than maxWidth/Height\n\n\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData;\n\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var element = this.element,\n          crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var alt = element.alt || 'The image to preview';\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = url;\n      image.alt = alt;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n\n      if (!preview) {\n        return;\n      }\n\n      var previews = preview;\n\n      if (typeof preview === 'string') {\n        previews = element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img'); // Save the original size for recover\n\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n\n        img.src = url;\n        img.alt = alt;\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n          cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n          height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      var options = this.options,\n          container = this.container,\n          containerData = this.containerData;\n      var minContainerWidth = Number(options.minContainerWidth) || MIN_CONTAINER_WIDTH;\n      var minContainerHeight = Number(options.minContainerHeight) || MIN_CONTAINER_HEIGHT;\n\n      if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\n        return;\n      }\n\n      var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n      if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n        var canvasData;\n        var cropBoxData;\n\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n\n        this.render();\n\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n\n      if (this.disabled) {\n        return;\n      }\n\n      event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n      if (this.wheeling) {\n        return;\n      }\n\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n          button = event.button;\n\n      if (this.disabled // Handle mouse event and pointer event and ignore touch event\n      || (event.type === 'mousedown' || event.type === 'pointerdown' && event.pointerType === 'mouse') && ( // No primary button (Usually the left button)\n      isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0 // Open context menu\n      || event.ctrlKey)) {\n        return;\n      }\n\n      var options = this.options,\n          pointers = this.pointers;\n      var action;\n\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      } // This line is required for preventing page zooming in iOS browsers\n\n\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n\n      if (this.disabled || !action) {\n        return;\n      }\n\n      var pointers = this.pointers;\n      event.preventDefault();\n\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      var action = this.action,\n          pointers = this.pointers;\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n\n      if (!action) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n          canvasData = this.canvasData,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData,\n          pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n          top = cropBoxData.top,\n          width = cropBoxData.width,\n          height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n\n            break;\n\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n\n            break;\n\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n\n            break;\n\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n\n            break;\n\n          default:\n        }\n      };\n\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n        // Resize crop box\n\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_SOUTH);\n          height += range.y;\n\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n        // Move canvas\n\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n        // Zoom canvas\n\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n        // Create crop box\n\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n\n          if (range.y < 0) {\n            top -= height;\n          } // Show the crop box if is hidden\n\n\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n\n          break;\n\n        default:\n      }\n\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      } // Override\n\n\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      return this;\n    },\n\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n\n      element[NAMESPACE] = undefined;\n\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.uncreate();\n      return this;\n    },\n\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n          left = _this$canvasData.left,\n          top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var width = canvasData.width,\n          height = canvasData.height,\n          naturalWidth = canvasData.naturalWidth,\n          naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          }; // Zoom from the triggering point of the event\n\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData;\n      var cropBoxData = {};\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n\n        var ratio = imageData.width / imageData.naturalWidth;\n\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n\n        this.setCropBoxData(cropBoxData);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n\n      return data || {};\n    },\n\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n\n        this.renderCropBox();\n      }\n\n      return this;\n    },\n\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n      if (!this.cropped) {\n        return source;\n      }\n\n      var _this$getData = this.getData(),\n          initialX = _this$getData.x,\n          initialY = _this$getData.y,\n          initialWidth = _this$getData.width,\n          initialHeight = _this$getData.height;\n\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.width || (ratio !== 1 ? source.width : initialWidth),\n        height: options.height || (ratio !== 1 ? source.height : initialHeight)\n      }),\n          width = _getAdjustedSizes.width,\n          height = _getAdjustedSizes.height;\n\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n          imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n          imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n      var sourceWidth = source.width;\n      var sourceHeight = source.height; // Source canvas parameters\n\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight; // Destination canvas parameters\n\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n\n      var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      } // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n\n\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n        if (this.ready) {\n          this.initCropBox();\n\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n          dragBox = this.dragBox,\n          face = this.face;\n\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n\n  var Cropper =\n  /*#__PURE__*/\n  function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Cropper);\n\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n\n        if (element[NAMESPACE]) {\n          return;\n        }\n\n        element[NAMESPACE] = this;\n\n        if (tagName === 'img') {\n          this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url; // Stop when it's a blank image\n\n          if (!url) {\n            return;\n          } // e.g.: \"http://example.com/img/picture.jpg\"\n\n\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n\n        if (!url) {\n          return;\n        }\n\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n            options = this.options;\n\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        } // Only IE10+ supports Typed Arrays\n\n\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        } // Detect the mime type of the image directly if it is a Data URL\n\n\n        if (REGEXP_DATA_URL.test(url)) {\n          // Read ArrayBuffer from Data URL of JPEG images directly for better performance\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\n            this.read(dataURLToArrayBuffer(url));\n          } else {\n            // Only a JPEG image may contains Exif Orientation information,\n            // the rest types of Data URLs are not necessary to check orientation at all.\n            this.clone();\n          }\n\n          return;\n        } // 1. Detect the mime type of the image by a XMLHttpRequest.\n        // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\n\n\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr; // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n\n        xhr.onprogress = function () {\n          // Abort the request directly if it not a JPEG image for better performance\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        xhr.open('GET', url);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n            imageData = this.imageData; // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n          var _parseOrientation = parseOrientation(orientation);\n\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n            url = this.url;\n        var crossOrigin = element.crossOrigin;\n        var crossOriginUrl = url;\n\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          if (!crossOrigin) {\n            crossOrigin = 'anonymous';\n          } // Bust cache when there is not a \"crossOrigin\" property (#519)\n\n\n          crossOriginUrl = addTimestamp(url);\n        }\n\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n\n        image.src = crossOriginUrl || url;\n        image.alt = element.alt || 'The image to crop';\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true; // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n\n        var isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\n\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.sizing = false;\n          _this2.sized = true;\n\n          _this2.build();\n        }; // Most modern browsers (excepts iOS WebKit)\n\n\n        if (image.naturalWidth && !isIOSWebKit) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n\n          if (!isIOSWebKit) {\n            body.removeChild(sizingImage);\n          }\n        };\n\n        sizingImage.src = image.src; // iOS WebKit will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n\n        if (!isIOSWebKit) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n\n        var element = this.element,\n            options = this.options,\n            image = this.image; // Create cropper elements\n\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image); // Hide the original image\n\n        addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n        container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n        if (!this.isImg) {\n          removeClass(image, CLASS_HIDE);\n        }\n\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n\n        if (options.autoCrop) {\n          this.crop();\n        }\n\n        this.setData(options.data);\n\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        this.cropper.parentNode.removeChild(this.cropper);\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n\n    return Cropper;\n  }();\n\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/cropperjs/dist/cropper.js\n// module id = 4RJ8\n// module chunks = 8","<template>\n  <div>\n    <div class=\"crumbs\">\n      <el-breadcrumb separator=\"/\">\n        <el-breadcrumb-item><i class=\"el-icon-lx-calendar\"></i> 表单</el-breadcrumb-item>\n        <el-breadcrumb-item>图片上传</el-breadcrumb-item>\n      </el-breadcrumb>\n    </div>\n    <div class=\"container\">\n      <div class=\"content-title\">支持拖拽</div>\n      <div class=\"plugins-tips\">\n        Element UI自带上传组件。\n        访问地址：<a href=\"http://element.eleme.io/#/zh-CN/component/upload\" target=\"_blank\">Element UI Upload</a>\n      </div>\n      <el-upload\n        class=\"upload-demo\"\n        drag\n        action=\"http://jsonplaceholder.typicode.com/api/posts/\"\n        multiple>\n        <i class=\"el-icon-upload\"></i>\n        <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\n        <div class=\"el-upload__tip\" slot=\"tip\">只能上传jpg/png文件，且不超过500kb</div>\n      </el-upload>\n      <div class=\"content-title\">支持裁剪</div>\n      <div class=\"plugins-tips\">\n        vue-cropperjs：一个封装了 cropperjs 的 Vue 组件。\n        访问地址：<a href=\"https://github.com/Agontuk/vue-cropperjs\" target=\"_blank\">vue-cropperjs</a>\n      </div>\n      <div class=\"crop-demo\">\n        <img :src=\"cropImg\" class=\"pre-img\">\n        <div class=\"crop-demo-btn\">选择图片\n          <input class=\"crop-input\" type=\"file\" name=\"image\" accept=\"image/*\" @change=\"setImage\"/>\n        </div>\n      </div>\n\n      <el-dialog title=\"裁剪图片\" :visible.sync=\"dialogVisible\" width=\"30%\">\n        <vue-cropper ref='cropper' :src=\"imgSrc\" :ready=\"cropImage\" :zoom=\"cropImage\" :cropmove=\"cropImage\" style=\"width:100%;height:300px;\"></vue-cropper>\n        <span slot=\"footer\" class=\"dialog-footer\">\n                    <el-button @click=\"cancelCrop\">取 消</el-button>\n                    <el-button type=\"primary\" @click=\"dialogVisible = false\">确 定</el-button>\n                </span>\n      </el-dialog>\n    </div>\n  </div>\n</template>\n\n<script>\n  import VueCropper  from 'vue-cropperjs';\n    export default {\n        name: \"Upload\",\n      data: function(){\n        return {\n          defaultSrc: require('../../assets/img/img.jpg'),\n          fileList: [],\n          imgSrc: '',\n          cropImg: '',\n          dialogVisible: false,\n        }\n      },\n      components: {\n        VueCropper\n      },\n      methods:{\n        setImage(e){\n          const file = e.target.files[0];\n          if (!file.type.includes('image/')) {\n            return;\n          }\n          const reader = new FileReader();\n          reader.onload = (event) => {\n            this.dialogVisible = true;\n            this.imgSrc = event.target.result;\n            this.$refs.cropper && this.$refs.cropper.replace(event.target.result);\n          };\n          reader.readAsDataURL(file);\n        },\n        cropImage () {\n          this.cropImg = this.$refs.cropper.getCroppedCanvas().toDataURL();\n        },\n        cancelCrop(){\n          this.dialogVisible = false;\n          this.cropImg = this.defaultSrc;\n        },\n        imageuploaded(res) {\n          console.log(res)\n        },\n        handleError(){\n          this.$notify.error({\n            title: '上传失败',\n            message: '图片上传接口上传失败，可更改为自己的服务器接口'\n          });\n        }\n      },\n      created(){\n        this.cropImg = this.defaultSrc;\n      }\n    }\n</script>\n\n<style scoped>\n  .content-title{\n    font-weight: 400;\n    line-height: 50px;\n    margin: 10px 0;\n    font-size: 22px;\n    color: #1f2f3d;\n  }\n  .pre-img{\n    width: 100px;\n    height: 100px;\n    background: #f8f8f8;\n    border: 1px solid #eee;\n    border-radius: 5px;\n  }\n  .crop-demo{\n    display: flex;\n    align-items: flex-end;\n  }\n  .crop-demo-btn{\n    position: relative;\n    width: 100px;\n    height: 40px;\n    line-height: 40px;\n    padding: 0 20px;\n    margin-left: 30px;\n    background-color: #409eff;\n    color: #fff;\n    font-size: 14px;\n    border-radius: 4px;\n    box-sizing: border-box;\n  }\n  .crop-input{\n    position: absolute;\n    width: 100px;\n    height: 40px;\n    left: 0;\n    top: 0;\n    opacity: 0;\n    cursor: pointer;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/page/Upload.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"crumbs\"},[_c('el-breadcrumb',{attrs:{\"separator\":\"/\"}},[_c('el-breadcrumb-item',[_c('i',{staticClass:\"el-icon-lx-calendar\"}),_vm._v(\" 表单\")]),_vm._v(\" \"),_c('el-breadcrumb-item',[_vm._v(\"图片上传\")])],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"content-title\"},[_vm._v(\"支持拖拽\")]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_c('el-upload',{staticClass:\"upload-demo\",attrs:{\"drag\":\"\",\"action\":\"http://jsonplaceholder.typicode.com/api/posts/\",\"multiple\":\"\"}},[_c('i',{staticClass:\"el-icon-upload\"}),_vm._v(\" \"),_c('div',{staticClass:\"el-upload__text\"},[_vm._v(\"将文件拖到此处，或\"),_c('em',[_vm._v(\"点击上传\")])]),_vm._v(\" \"),_c('div',{staticClass:\"el-upload__tip\",attrs:{\"slot\":\"tip\"},slot:\"tip\"},[_vm._v(\"只能上传jpg/png文件，且不超过500kb\")])]),_vm._v(\" \"),_c('div',{staticClass:\"content-title\"},[_vm._v(\"支持裁剪\")]),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_c('div',{staticClass:\"crop-demo\"},[_c('img',{staticClass:\"pre-img\",attrs:{\"src\":_vm.cropImg}}),_vm._v(\" \"),_c('div',{staticClass:\"crop-demo-btn\"},[_vm._v(\"选择图片\\n        \"),_c('input',{staticClass:\"crop-input\",attrs:{\"type\":\"file\",\"name\":\"image\",\"accept\":\"image/*\"},on:{\"change\":_vm.setImage}})])]),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"裁剪图片\",\"visible\":_vm.dialogVisible,\"width\":\"30%\"},on:{\"update:visible\":function($event){_vm.dialogVisible=$event}}},[_c('vue-cropper',{ref:\"cropper\",staticStyle:{\"width\":\"100%\",\"height\":\"300px\"},attrs:{\"src\":_vm.imgSrc,\"ready\":_vm.cropImage,\"zoom\":_vm.cropImage,\"cropmove\":_vm.cropImage}}),_vm._v(\" \"),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":_vm.cancelCrop}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.dialogVisible = false}}},[_vm._v(\"确 定\")])],1)],1)],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"plugins-tips\"},[_vm._v(\"\\n      Element UI自带上传组件。\\n      访问地址：\"),_c('a',{attrs:{\"href\":\"http://element.eleme.io/#/zh-CN/component/upload\",\"target\":\"_blank\"}},[_vm._v(\"Element UI Upload\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"plugins-tips\"},[_vm._v(\"\\n      vue-cropperjs：一个封装了 cropperjs 的 Vue 组件。\\n      访问地址：\"),_c('a',{attrs:{\"href\":\"https://github.com/Agontuk/vue-cropperjs\",\"target\":\"_blank\"}},[_vm._v(\"vue-cropperjs\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-50d5547a\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/page/Upload.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-50d5547a\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Upload.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Upload.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Upload.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-50d5547a\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Upload.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-50d5547a\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/page/Upload.vue\n// module id = null\n// module chunks = ","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _cropperjs = require('cropperjs');\n\nvar _cropperjs2 = _interopRequireDefault(_cropperjs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar previewPropType = typeof window === 'undefined' ? [String, Array] : [String, Array, Element, NodeList];\n\nexports.default = {\n  render: function render(h) {\n    return h('div', { style: this.containerStyle }, [h('img', {\n      ref: 'img',\n      attrs: {\n        src: this.src,\n        alt: this.alt || 'image',\n        style: 'max-width: 100%'\n      },\n      style: this.imgStyle\n    })]);\n  },\n\n  props: {\n    containerStyle: Object,\n    src: {\n      type: String,\n      default: ''\n    },\n    alt: String,\n    imgStyle: Object,\n\n    viewMode: Number,\n    dragMode: String,\n    aspectRatio: Number,\n    data: Object,\n    preview: previewPropType,\n    responsive: {\n      type: Boolean,\n      default: true\n    },\n    restore: {\n      type: Boolean,\n      default: true\n    },\n    checkCrossOrigin: {\n      type: Boolean,\n      default: true\n    },\n    checkOrientation: {\n      type: Boolean,\n      default: true\n    },\n    modal: {\n      type: Boolean,\n      default: true\n    },\n    guides: {\n      type: Boolean,\n      default: true\n    },\n    center: {\n      type: Boolean,\n      default: true\n    },\n    highlight: {\n      type: Boolean,\n      default: true\n    },\n    background: {\n      type: Boolean,\n      default: true\n    },\n    autoCrop: {\n      type: Boolean,\n      default: true\n    },\n    autoCropArea: Number,\n    movable: {\n      type: Boolean,\n      default: true\n    },\n    rotatable: {\n      type: Boolean,\n      default: true\n    },\n    scalable: {\n      type: Boolean,\n      default: true\n    },\n    zoomable: {\n      type: Boolean,\n      default: true\n    },\n    zoomOnTouch: {\n      type: Boolean,\n      default: true\n    },\n    zoomOnWheel: {\n      type: Boolean,\n      default: true\n    },\n    wheelZoomRatio: Number,\n    cropBoxMovable: {\n      type: Boolean,\n      default: true\n    },\n    cropBoxResizable: {\n      type: Boolean,\n      default: true\n    },\n    toggleDragModeOnDblclick: {\n      type: Boolean,\n      default: true\n    },\n\n    minCanvasWidth: Number,\n    minCanvasHeight: Number,\n    minCropBoxWidth: Number,\n    minCropBoxHeight: Number,\n    minContainerWidth: Number,\n    minContainerHeight: Number,\n\n    ready: Function,\n    cropstart: Function,\n    cropmove: Function,\n    cropend: Function,\n    crop: Function,\n    zoom: Function\n  },\n  mounted: function mounted() {\n    var _$options$props = this.$options.props,\n        containerStyle = _$options$props.containerStyle,\n        src = _$options$props.src,\n        alt = _$options$props.alt,\n        imgStyle = _$options$props.imgStyle,\n        data = _objectWithoutProperties(_$options$props, ['containerStyle', 'src', 'alt', 'imgStyle']);\n\n    var props = {};\n\n    for (var key in data) {\n      if (this[key] !== undefined) {\n        props[key] = this[key];\n      }\n    }\n\n    this.cropper = new _cropperjs2.default(this.$refs.img, props);\n  },\n\n  methods: {\n    reset: function reset() {\n      return this.cropper.reset();\n    },\n    clear: function clear() {\n      return this.cropper.clear();\n    },\n    initCrop: function initCrop() {\n      return this.cropper.crop();\n    },\n    replace: function replace(url) {\n      var onlyColorChanged = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      return this.cropper.replace(url, onlyColorChanged);\n    },\n    enable: function enable() {\n      return this.cropper.enable();\n    },\n    disable: function disable() {\n      return this.cropper.disable();\n    },\n    destroy: function destroy() {\n      return this.cropper.destroy();\n    },\n    move: function move(offsetX, offsetY) {\n      return this.cropper.move(offsetX, offsetY);\n    },\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n\n      return this.cropper.moveTo(x, y);\n    },\n    relativeZoom: function relativeZoom(ratio, _originalEvent) {\n      return this.cropper.zoom(ratio, _originalEvent);\n    },\n    zoomTo: function zoomTo(ratio, _originalEvent) {\n      return this.cropper.zoomTo(ratio, _originalEvent);\n    },\n    rotate: function rotate(degree) {\n      return this.cropper.rotate(degree);\n    },\n    rotateTo: function rotateTo(degree) {\n      return this.cropper.rotateTo(degree);\n    },\n    scaleX: function scaleX(_scaleX) {\n      return this.cropper.scaleX(_scaleX);\n    },\n    scaleY: function scaleY(_scaleY) {\n      return this.cropper.scaleY(_scaleY);\n    },\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n\n      return this.cropper.scale(scaleX, scaleY);\n    },\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      return this.cropper.getData(rounded);\n    },\n    setData: function setData(data) {\n      return this.cropper.setData(data);\n    },\n    getContainerData: function getContainerData() {\n      return this.cropper.getContainerData();\n    },\n    getImageData: function getImageData() {\n      return this.cropper.getImageData();\n    },\n    getCanvasData: function getCanvasData() {\n      return this.cropper.getCanvasData();\n    },\n    setCanvasData: function setCanvasData(data) {\n      return this.cropper.setCanvasData(data);\n    },\n    getCropBoxData: function getCropBoxData() {\n      return this.cropper.getCropBoxData();\n    },\n    setCropBoxData: function setCropBoxData(data) {\n      return this.cropper.setCropBoxData(data);\n    },\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      return this.cropper.getCroppedCanvas(options);\n    },\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      return this.cropper.setAspectRatio(aspectRatio);\n    },\n    setDragMode: function setDragMode(mode) {\n      return this.cropper.setDragMode(mode);\n    }\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-cropperjs/dist/VueCropper.js\n// module id = sRoY\n// module chunks = 8"],"sourceRoot":""}